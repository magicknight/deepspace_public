[summary]
    # name of this experiment
    name = 'wp8_defect_detection'
    author = 'Zhihua Liang'
    discription = 'Defect detection for wp8 ai product flanders'
[settings]
    # root directory of the project (for saveing logs, models, temp files, etc...)
    project_root = '/home/zhihua/data/work_space'
    # root directory of the dataset
    dataset_root = '/home/zhihua/data/anomaly/wp8/cyl9_aligned_781x781x793_uint16_png'
    # bin object path
    bin_file_path = '/mnt/data/anomaly/wp8/cyl9_aligned_781x781x793_uint16.bin'
    # bin file shape
    bin_shape = [781,781,793]
    # bin_shape = [760,810,815]
    # agent name
    agent = 'wp8'
    # which device to use, can be 'gpu', 'tpu', or 'cpu'
    device = 'gpu'
    # retry times to break the object
    gpu_device = 0
    # angle range
    batch_size = 8
    # Learning rate, can be a float number like 0.001 or a list, like [0.1, 0.001, 1e-6]
    learning_rate = 0.001
    # weight decay
    weight_decay = 0
    # max epoches to for training.
    max_epoch = 20
    # validate every x epoches
    validate_step = 2
    # checkpoint file name
    checkpoint_file = 'checkpoint.pth.tar'
    # dataloader name
    data_loader = 'defect_image_dataloader'
    # workers for dataloader
    data_loader_workers = 2
    # output format; png or tif
    data_format = 'png'
    # data mode, 'image', 'numpy', 'tfrecord'... or anything if you write your own data loader
    data_mode = 'image'
    # source distance from the origin point
    async_loading = true


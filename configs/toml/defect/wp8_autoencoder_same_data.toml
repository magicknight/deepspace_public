[summary]
    # name of this experiment
    name = 'wp8_defect_detection'
    author = 'Zhihua Liang'
    discription = 'Defect detection for wp8 flanders maker'
[settings]
    # root directory of the project (for saveing logs, models, temp files, etc...)
    # project_root = '/home/zhihua/data/work_space/cy18'
    project_root = '/home/zhihua/data/work_space/cy19'
    # root directory of the dataset
    dataset_root = '/home/zhihua/data/anomaly/wp8/cy19_png'
    # dataset_root = '/home/zhihua/data/anomaly/wp8/cy18_png'
    # agent name
    agent = 'deepspace.agents.defect.normal.DefectAgent'
    # which device to use, can be 'gpu', 'tpu', or 'cpu'
    device = 'gpu'
    # which gpu device
    gpu_device = 0
    # if async loading into cuda memory
    async_loading = true
    # angle range
    batch_size = 32
    # random seed
    seed = 999
    # model parameters
    model_c = 128
    model_m = 64
    # Learning rate, can be a float number like 0.001 or a list, like [0.1, 0.001, 1e-6]
    learning_rate = 1e-3
    # betas for Adam optimizer
    betas = [0.9, 0.999]
    # eps for Adam optimizer
    eps = 1e-8
    # momentum for Adam optimizer
    momentum = 0.99
    # weight decay
    weight_decay = 1e-5
    # learning patience for the scheduler. it is number of epochs with no improvement after which learning rate will be reduced.
    learning_rate_patience = 2
    # max epoches to for training.
    max_epoch = 300
    # validate every x epoches
    validate_step = 2
    # save model every x steps
    save_model_step = 30
    # checkpoint file name
    checkpoint_file = 'checkpoint.pth.tar'
    # dataloader name
    data_loader = 'defect_image_dataloader'
    # workers for dataloader
    data_loader_workers = 8
    # data resolution
    image_resolution = [512, 512]
    # channels
    image_channels = 1
    # output format; png or tif
    data_format = 'png'
    # data mode, 'image', 'numpy', 'tfrecord'... or anything when there exist corresponding dataloader
    data_mode = 'image'
    # mode = 'train', 'test', 'validate', 'real'. With 'real', no ground_truth iamges are presented
    mode = 'real'
    # mode = 'train'
    # save ouput on first n images during validation
    save_images = [16, 19]





